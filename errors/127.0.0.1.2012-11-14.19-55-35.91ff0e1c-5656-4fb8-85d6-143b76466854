(dp1
S'output'
p2
S"<type 'exceptions.KeyError'> 'colnames'"
p3
sS'layer'
p4
S'/home/unic/web2py/applications/manager/views/appadmin.html'
p5
sS'code'
p6
S'response.write(\'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\\n<!--\\nAuthor: Reality Software\\nWebsite: http://www.realitysoftware.ca\\nNote: This is a free template released under the Creative Commons Attribution 3.0 license, \\nwhich means you can use it in any way you want provided you keep links to the author intact.\\n-->\\n<html xmlns="http://www.w3.org/1999/xhtml">\\n <head>\\n  <title>\\n   \', escape=False)\nresponse.write(response.title or request.application)\nresponse.write(\'\\n  </title>\\n  \', escape=False)\nresponse.files.append(URL(request.application,\'static\',\'plugin_layouts/layouts/Papira/style.css\'))\nresponse.write(\'\\n  \', escape=False)\nresponse.files.append(URL(\'static\',\'plugin_layouts/superfish.js\'))\nresponse.write(\'\\n  \', escape=False)\nresponse.write(\'<script type="text/javascript"><!--\\n    // These variables are used by the web2py_ajax_init function in web2py_ajax.js (which is loaded below).\\n    var w2p_ajax_confirm_message = "\', escape=False)\nresponse.write(T(\'Are you sure you want to delete this object?\'))\nresponse.write(\'";\\n    var w2p_ajax_date_format = "\', escape=False)\nresponse.write(T(\'%Y-%m-%d\'))\nresponse.write(\'";\\n    var w2p_ajax_datetime_format = "\', escape=False)\nresponse.write(T(\'%Y-%m-%d %H:%M:%S\'))\nresponse.write(\'";\\n    //--></script>\\n\', escape=False)\nresponse.files.insert(0,URL(\'static\',\'js/jquery.js\'))\nresponse.files.insert(3,URL(\'static\',\'js/web2py.js\'))\nresponse.include_meta()\nresponse.include_files()\nresponse.write(\'\\n\', escape=False)\nresponse.write(\'\\n  <style>\\nul.web2py-menu-vertical { width: 150px; position: relative; top:1em; left:1em;  z-index:30; border:0; margin:0; padding: 0; list-style: none; text-decoration: none;}\\nul.web2py-menu-vertical li { margin:0; padding:0; border:0; width: 150px; background: black; text-align:left;}\\nul.web2py-menu-vertical li a { margin:0; padding: 1px 3px 1px 3px; border:0; width: 144px; color: white; font-size:12px;}\\ndiv.flash { position: fixed; float: right; padding: 10px; top: 10px; right: 30px; opacity: 0.75; margin: 10px 10px 10px 10px; text-align: center; clear: both; color: #fff; font-size: 11pt; text-align: center; vertical-align: middle; cursor: pointer; background: black; border: 2px solid #fff; -moz-border-radius: 5px; -webkit-border-radius: 5px; z-index: 2; }\\ndiv.error { background-color: red; color: white; padding: 3px; }\\n.auth_navbar { text-align:right; z-index:20; position: absolute; top: 2px; right:30px; border:0; padding:0 }\\n  </style>\\n </head>\\n <body>\\n\\n\\n  <div id="all">\\n   <div id="container">\\n    <!-- header -->\\n       <div id="logo" font-size:40px >\\n     <a href="#">\\n      <span class="brown">\\n       <strong>\\n        Award\\n       </strong>\\n      </span>\\n      Manager\\n     </a>\\n    </div>\\n    <div id="menu">\\n        <a href="\', escape=False)\nresponse.write(URL(r = request, f = \'logout\'))\nresponse.write(\'">Logout</a>\\n       </div>\\n   \\n     \', escape=False)\nif session.token=="neeharikak.v@students.iiit.ac.in" :\n    response.write(\'\\n          <div id="sidebar">\\n        <br/><br/><br/>\\n     <table>\\n     <h2>\\n         <tr><td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="\', escape=False)\n    response.write(URL(r = request, f = \'index\'))\n    response.write(\'">Home</a> </b></td></tr>\\n        \\n        \\n     <tr><td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="\', escape=False)\n    response.write(URL(r = request, f = \'Admin\'))\n    response.write(\'">Amount</a></b></td></tr>\\n     <tr><td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="\', escape=False)\n    response.write(URL(r = request, f = \'upload\'))\n    response.write(\'">Students List</a></b></td></tr>\\n         <tr><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="\', escape=False)\n    response.write(URL(r = request, f = \'upload1\'))\n    response.write(\'">Book List</a></b></td></tr>\\n          <tr><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="\', escape=False)\n    response.write(URL(r = request, f = \'edit\'))\n    response.write(\'">Edit Book List</a></b></td></tr>\\n     <tr><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="\', escape=False)\n    response.write(URL(r = request, f = \'choose\'))\n    response.write(\'">Allot</a></b></td></tr>\\n         \', escape=False)\n    id1=0\n    response.write(\'\\n         \', escape=False)\n    for rows in db(db.Admin).select():\n        response.write(\'\\n\', escape=False)\n        id1 =id1 +1\n        response.write(\'\\n\', escape=False)\n        pass\n    response.write(\'\\n         \', escape=False)\n    if id1 != 0:\n        response.write(\'\\n     <tr><td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="\', escape=False)\n        response.write(URL(r = request, f = \'total\'))\n        response.write(\'">Output</a></b></td></tr>\\n         \', escape=False)\n        pass\n    response.write(\'\\n          \', escape=False)\n    if id1 == 0:\n        response.write(\'\\n     <tr><td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="\', escape=False)\n        response.write(URL(r = request, f = \'error\'))\n        response.write(\'">Output</a></b></td></tr>\\n         \', escape=False)\n        pass\n    response.write(\'\\n         \\n         <tr><td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="\', escape=False)\n    response.write(URL(r = request, f = \'alloted\'))\n    response.write(\'">Alloted_students</a></b><td></tr>\\n     <tr><td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="\', escape=False)\n    response.write(URL(r = request, f = \'label\'))\n    response.write(\'">Get_labels</a></b></td></tr>\\n     <tr><td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="\', escape=False)\n    response.write(URL(r = request, f = \'drop1m\'))\n    response.write(\'">Done</a></b></td></tr>\\n      <tr><td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="\', escape=False)\n    response.write(URL(r = request, f = \'logout\'))\n    response.write(\'">Logout</a></b></td></tr>\\n      </h2>\\n         </table>\\n         </div>\\n      \', escape=False)\n    pass\nresponse.write(\'\\n         \\n         \\n         \', escape=False)\nif session.token!="neeharikak.v@students.iiit.ac.in" :\n    response.write(\'\\n         <div id="sidebar">\\n         <table>\\n         <h2>\\n             <br/><br/><br/>\\n             <tr><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="\', escape=False)\n    response.write(URL(r = request, f = \'index\'))\n    response.write(\'">HOME</a></b></td></tr>\\n             <tr><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="\', escape=False)\n    response.write(URL(r = request, f = \'choose1\'))\n    response.write(\'">BOOKS</a></b></td></tr>\\n             \\n         <tr><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><a href="\', escape=False)\n    response.write(URL(r = request, f = \'preference\'))\n    response.write(\'">LANGUAGE </a></b></td></tr>\\n         \\n        \\n          </h2>\\n    </table>\\n      \\n       </div>\\n         \', escape=False)\n    pass\nresponse.write(\'\\n        \\n    <script>\\n      jQuery(document).ready(function(){jQuery(\\\'ul.web2py-menu\\\').superfish({delay:400});});\\n    </script>\\n    </div>\\n    <!--end header -->\\n    <!-- main -->\\n    <div id="main">\\n     <div class="flash">\', escape=False)\nresponse.write(response.flash or \'\')\nresponse.write(\'</div>\\n     \', escape=False)\nresponse.write(\'\\n<script><!--\\n    jQuery(document).ready(function(){\\n    jQuery("table.sortable tbody tr").mouseover( function() {\\n    jQuery(this).addClass("highlight"); }).mouseout( function() { \\n    jQuery(this).removeClass("highlight"); });\\n    jQuery(\\\'table.sortable tbody tr:odd\\\').addClass(\\\'odd\\\');\\n    jQuery(\\\'table.sortable tbody tr:even\\\').addClass(\\\'even\\\');\\n});\\n//--></script>\\n\\n\', escape=False)\nif request.function==\'index\':\n    response.write(\'\\n<h2>\', escape=False)\n    response.write(T("Available databases and tables"))\n    response.write(\'</h2>\\n  \', escape=False)\n    if not databases:\n        response.write(T("No databases in this application"))\n        pass\n    response.write(\'\\n  \', escape=False)\n    for db in sorted(databases):\n        response.write(\'\\n    \', escape=False)\n        for table in databases[db].tables:\n            response.write(\'\\n      \', escape=False)\n            qry=\'%s.%s.id>0\'%(db,table)\n            response.write(\'\\n      \', escape=False)\n            tbl=databases[db][table]\n            response.write(\'\\n      \', escape=False)\n            if hasattr(tbl,\'_primarykey\'):\n                response.write(\'\\n        \', escape=False)\n                if tbl._primarykey:\n                    response.write(\'\\n            \', escape=False)\n                    firstkey=tbl[tbl._primarykey[0]]\n                    response.write(\'\\n            \', escape=False)\n                    if firstkey.type in [\'string\',\'text\']:\n                        response.write(\'\\n              \', escape=False)\n                        qry=\'%s.%s.%s!=""\'%(db,table,firstkey.name)\n                        response.write(\'\\n            \', escape=False)\n                    else:\n                        response.write(\'\\n              \', escape=False)\n                        qry=\'%s.%s.%s>0\'%(db,table,firstkey.name)\n                        response.write(\'\\n            \', escape=False)\n                        pass\n                    response.write(\'\\n        \', escape=False)\n                else:\n                    response.write(\'\\n             \', escape=False)\n                    qry=\'\'\n                    response.write(\'\\n             \', escape=False)\n                    pass\n                response.write(\'\\n      \', escape=False)\n                pass\n            response.write(\'\\n      <h3>\\n\\t\', escape=False)\n            response.write(A("%s.%s" % (db,table),_href=URL(\'select\',args=[db],vars=dict(query=qry))))\n            response.write(\'\\n      </h3>\\n      [ \', escape=False)\n            response.write(A(str(T(\'insert new\'))+\' \'+table,_href=URL(\'insert\',args=[db,table])))\n            response.write(\' ]\\n    <br /><br />\\n    \', escape=False)\n            pass\n        response.write(\'\\n  \', escape=False)\n        pass\n    response.write(\'\\n\\n\', escape=False)\nelif request.function==\'select\':\n    response.write(\'\\n  <h2>\', escape=False)\n    response.write(XML(str(T("database %s select"))%A(request.args[0],_href=URL(\'index\'))))\n    response.write(\'\\n  </h2>\\n   \', escape=False)\n    if table:\n        response.write(\'\\n  [ \', escape=False)\n        response.write(A(str(T(\'insert new %s\'))%table,_href=URL(\'insert\',args=[request.args[0],table])))\n        response.write(\' ]<br/><br/>\\n    <h3>\', escape=False)\n        response.write(T("Rows in table"))\n        response.write(\'</h3><br/>\\n   \', escape=False)\n    else:\n        response.write(\'\\n    <h3>\', escape=False)\n        response.write(T("Rows selected"))\n        response.write(\'</h3><br/>\\n   \', escape=False)\n        pass\n    response.write(\'\\n   \', escape=False)\n    response.write(form)\n    response.write(\'\\n   <p>\', escape=False)\n    response.write(T(\'The "query" is a condition like "db.table1.field1==\\\'value\\\'". Something like "db.table1.field1==db.table2.field2" results in a SQL JOIN.\'))\n    response.write(\'<br/>\\n      \', escape=False)\n    response.write(T(\'Use (...)&(...) for AND, (...)|(...) for OR, and ~(...)  for NOT to build more complex queries.\'))\n    response.write(\'<br/>\\n      \', escape=False)\n    response.write(T(\'"update" is an optional expression like "field1=\\\'newvalue\\\'". You cannot update or delete the results of a JOIN\'))\n    response.write(\'</p>\\n    <br/><br/>\\n    <h4>\', escape=False)\n    response.write(nrows)\n    response.write(\' \', escape=False)\n    response.write(T("selected"))\n    response.write(\'</h4>\\n    \', escape=False)\n    if start>0:\n        response.write(\'[ \', escape=False)\n        response.write(A(T(\'previous 100 rows\'),_href=URL(\'select\',args=request.args[0],vars=dict(start=start-100))))\n        response.write(\' ]\', escape=False)\n        pass\n    response.write(\'\\n    \', escape=False)\n    if stop<nrows:\n        response.write(\'[ \', escape=False)\n        response.write(A(T(\'next 100 rows\'),_href=URL(\'select\',args=request.args[0],vars=dict(start=start+100))))\n        response.write(\' ]\', escape=False)\n        pass\n    response.write(\'    \\n    \', escape=False)\n    if rows:\n        response.write(\'\\n       <div style="overflow: auto;" width="80%">\\n       \', escape=False)\n        linkto=URL(\'update\',args=request.args[0])\n        response.write(\'\\n       \', escape=False)\n        upload=URL(\'download\',args=request.args[0])\n        response.write(\'    \\n       \', escape=False)\n        response.write(SQLTABLE(rows,linkto,upload,orderby=True,_class=\'sortable\'))\n        response.write(\'\\n       </div>\\n    \', escape=False)\n        pass\n    response.write(\'\\n    <br/><br/><h3>\', escape=False)\n    response.write(T("Import/Export"))\n    response.write(\'</h3><br/>\\n    [ <a href="\', escape=False)\n    response.write(URL(\'csv\',args=request.args[0],vars=dict(query=query)))\n    response.write(\'">\', escape=False)\n    response.write(T("export as csv file"))\n    response.write(\'</a> ]\\n  \', escape=False)\n    if table:\n        response.write(\'\\n    \', escape=False)\n        response.write(FORM(str(T(\'or import from csv file\'))+" ",INPUT(_type=\'file\',_name=\'csvfile\'),INPUT(_type=\'hidden\',_value=table,_name=\'table\'),INPUT(_type=\'submit\',_value=\'import\')))\n        response.write(\'\\n  \', escape=False)\n        pass\n    response.write(\'\\n\\n\\n\', escape=False)\nelif request.function==\'insert\':\n    response.write(\'  \\n  <h2>\', escape=False)\n    response.write(T("database"))\n    response.write(\' \', escape=False)\n    response.write(A(request.args[0],_href=URL(\'index\')))\n    response.write(\'\\n    \', escape=False)\n    if hasattr(table,\'_primarykey\'):\n        response.write(\'\\n      \', escape=False)\n        fieldname=table._primarykey[0]\n        response.write(\'\\n      \', escape=False)\n        dbname=request.args[0]\n        response.write(\'\\n      \', escape=False)\n        tablename=request.args[1]\n        response.write(\'\\n      \', escape=False)\n        cond = table[fieldname].type in [\'string\',\'text\'] and \'!=""\' or \'>0\'\n        response.write(\'\\n      \', escape=False)\n        response.write(T("table"))\n        response.write(\' \', escape=False)\n        response.write(A(tablename,_href=URL(\'select\',args=dbname,vars=dict(query=\'%s.%s.%s%s\'%(dbname,tablename,fieldname,cond)))))\n        response.write(\'\\n    \', escape=False)\n    else:\n        response.write(\'  \\n      \', escape=False)\n        response.write(T("table"))\n        response.write(\' \', escape=False)\n        response.write(A(request.args[1],_href=URL(\'select\',args=request.args[0],vars=dict(query=\'%s.%s.id>0\'%tuple(request.args[:2])))))\n        response.write(\'\\n    \', escape=False)\n        pass\n    response.write(\'\\n  </h2>\\n  <h3>\', escape=False)\n    response.write(T("New Record"))\n    response.write(\'</h3><br/>\\n  \', escape=False)\n    response.write(form)\n    response.write(\'\\n\', escape=False)\nelif request.function==\'update\':\n    response.write(\'\\n  <h2>\', escape=False)\n    response.write(T("database"))\n    response.write(\' \', escape=False)\n    response.write(A(request.args[0],_href=URL(\'index\')))\n    response.write(\'\\n    \', escape=False)\n    if hasattr(table,\'_primarykey\'):\n        response.write(\'\\n      \', escape=False)\n        fieldname=request.vars.keys()[0]\n        response.write(\'\\n      \', escape=False)\n        dbname=request.args[0]\n        response.write(\'\\n      \', escape=False)\n        tablename=request.args[1]\n        response.write(\'\\n      \', escape=False)\n        cond = table[fieldname].type in [\'string\',\'text\'] and \'!=""\' or \'>0\'\n        response.write(\'      \\n      \', escape=False)\n        response.write(T("table"))\n        response.write(\' \', escape=False)\n        response.write(A(tablename,_href=URL(\'select\',args=dbname,vars=dict(query=\'%s.%s.%s%s\'%(dbname,tablename,fieldname,cond)))))\n        response.write(\'\\n      \', escape=False)\n        response.write(T("record"))\n        response.write(\' \', escape=False)\n        response.write(A(\'%s=%s\'%request.vars.items()[0],_href=URL(\'update\',args=request.args[:2],vars=request.vars)))\n        response.write(\'\\n    \', escape=False)\n    else:\n        response.write(\'\\n      \', escape=False)\n        response.write(T("table"))\n        response.write(\' \', escape=False)\n        response.write(A(request.args[1],_href=URL(\'select\',args=request.args[0],vars=dict(query=\'%s.%s.id>0\'%tuple(request.args[:2])))))\n        response.write(\'\\n      \', escape=False)\n        response.write(T("record id"))\n        response.write(\' \', escape=False)\n        response.write(A(request.args[2],_href=URL(\'update\',args=request.args[:3])))\n        response.write(\'\\n    \', escape=False)\n        pass\n    response.write(\'\\n  </h2>\\n  <h3>\', escape=False)\n    response.write(T("Edit current record"))\n    response.write(\'</h3><br/><br/>\', escape=False)\n    response.write(form)\n    response.write(\'\\n\\n\', escape=False)\nelif request.function==\'state\':\n    response.write(\'\\n  <h2>\', escape=False)\n    response.write(T("Internal State"))\n    response.write(\'</h2>\\n  <h3>\', escape=False)\n    response.write(T("Current request"))\n    response.write(\'</h3>\\n  \', escape=False)\n    response.write(BEAUTIFY(request))\n    response.write(\'\\n  <br/><h3>\', escape=False)\n    response.write(T("Current response"))\n    response.write(\'</h3>\\n  \', escape=False)\n    response.write(BEAUTIFY(response))\n    response.write(\'\\n  <br/><h3>\', escape=False)\n    response.write(T("Current session"))\n    response.write(\'</h3>\\n  \', escape=False)\n    response.write(BEAUTIFY(session))\n    response.write(\'\\n\\n\\n\', escape=False)\nelif request.function == \'ccache\':\n    response.write(\'\\n<h2>Cache</h2>\\n<div class="list">\\n\\n  <div class="list-header">\\n    <h3>Statistics</h3>\\n  </div>\\n\\n  <div class="content">\\n    <h4>Overview</h4>\\n    <p>Number of entries: <strong>\', escape=False)\n    response.write(total[\'entries\'])\n    response.write(\'</strong>\\n      \', escape=False)\n    if total[\'entries\'] > 0:\n        response.write(\'\\n    </p>\\n    <p>\\n      Hit Ratio: \\n      <strong>\', escape=False)\n        response.write(total[\'ratio\'])\n        response.write(\'%</strong> \\n      (<strong>\', escape=False)\n        response.write(total[\'hits\'])\n        response.write(\'</strong> hits \\n      and <strong>\', escape=False)\n        response.write(total[\'misses\'])\n        response.write(\'</strong> misses)\\n    </p>\\n    <p>\\n      Size of cache: \\n      \', escape=False)\n        if object_stats:\n            response.write(\'\\n      <strong>\', escape=False)\n            response.write(total[\'objects\'])\n            response.write(\'</strong> items, \\n      <strong>\', escape=False)\n            response.write(total[\'bytes\'])\n            response.write(\'</strong> bytes \\n      \', escape=False)\n            if total[\'bytes\'] > 524287:\n                response.write(\'\\n      (<strong>\', escape=False)\n                response.write("%.0d" % (total[\'bytes\'] / 1048576))\n                response.write(\' MB</strong>)\\n      \', escape=False)\n                pass\n            response.write(\'\\n      \', escape=False)\n        else:\n            response.write(\' <strong>not available</strong> (requires the Python <a href="http://pypi.python.org/pypi/guppy/" target="_blank">guppy</a> library)\\n      \', escape=False)\n            pass\n        response.write(\'\\n    </p>\\n    <p>\\n      Cache contains items up to \\n      <strong>\', escape=False)\n        response.write("%02d" % total[\'oldest\'][0])\n        response.write(\'</strong> hours \\n      <strong>\', escape=False)\n        response.write("%02d" % total[\'oldest\'][1])\n        response.write(\'</strong> minutes \\n      <strong>\', escape=False)\n        response.write("%02d" % total[\'oldest\'][2])\n        response.write(\'</strong> seconds old.\\n    </p>\\n    \', escape=False)\n        response.write(BUTTON(T(\'Cache Keys\'), _onclick=\'jQuery("#all_keys").toggle();\'))\n        response.write(\'\\n    <div class="hidden" id="all_keys">\\n      \', escape=False)\n        response.write(total[\'keys\'])\n        response.write(\'\\n    </div>\\n    <br />\\n    \', escape=False)\n        pass\n    response.write(\'\\n        \\n    <h4>RAM</h4>\\n    <p>Number of entries: <strong>\', escape=False)\n    response.write(ram[\'entries\'])\n    response.write(\'</strong>\\n        \', escape=False)\n    if ram[\'entries\'] > 0:\n        response.write(\'</p>\\n    <p>\\n      Hit Ratio: \\n      <strong>\', escape=False)\n        response.write(ram[\'ratio\'])\n        response.write(\'%</strong> \\n      (<strong>\', escape=False)\n        response.write(ram[\'hits\'])\n        response.write(\'</strong> hits \\n      and <strong>\', escape=False)\n        response.write(ram[\'misses\'])\n        response.write(\'</strong> misses)\\n    </p>\\n    <p>\\n      Size of cache: \\n      \', escape=False)\n        if object_stats:\n            response.write(\'\\n      <strong>\', escape=False)\n            response.write(ram[\'objects\'])\n            response.write(\'</strong> items, \\n      <strong>\', escape=False)\n            response.write(ram[\'bytes\'])\n            response.write(\'</strong> bytes \\n      \', escape=False)\n            if ram[\'bytes\'] > 524287:\n                response.write(\'\\n      (<strong>\', escape=False)\n                response.write(ram[\'bytes\'] / 1048576)\n                response.write(\' MB</strong>)\\n      \', escape=False)\n                pass\n            response.write(\'\\n      \', escape=False)\n        else:\n            response.write(\' <strong>not available</strong> (requires the Python <a href="http://pypi.python.org/pypi/guppy/" target="_blank">guppy</a> library)\\n      \', escape=False)\n            pass\n        response.write(\'\\n    </p>\\n    <p>\\n      RAM contains items up to \\n      <strong>\', escape=False)\n        response.write("%02d" % ram[\'oldest\'][0])\n        response.write(\'</strong> hours \\n      <strong>\', escape=False)\n        response.write("%02d" % ram[\'oldest\'][1])\n        response.write(\'</strong> minutes \\n      <strong>\', escape=False)\n        response.write("%02d" % ram[\'oldest\'][2])\n        response.write(\'</strong> seconds old.\\n    </p>\\n    \', escape=False)\n        response.write(BUTTON(T(\'RAM Cache Keys\'), _onclick=\'jQuery("#ram_keys").toggle();\'))\n        response.write(\'\\n    <div class="hidden" id="ram_keys">\\n      \', escape=False)\n        response.write(ram[\'keys\'])\n        response.write(\'\\n    </div>\\n    <br />\\n    \', escape=False)\n        pass\n    response.write(\'\\n    \\n    <h4>DISK</h4>\\n    <p>Number of entries: <strong>\', escape=False)\n    response.write(disk[\'entries\'])\n    response.write(\'</strong>\\n      \', escape=False)\n    if disk[\'entries\'] > 0:\n        response.write(\'\\n    </p>\\n    <p>\\n      Hit Ratio: \\n      <strong>\', escape=False)\n        response.write(disk[\'ratio\'])\n        response.write(\'%</strong> \\n      (<strong>\', escape=False)\n        response.write(disk[\'hits\'])\n        response.write(\'</strong> hits \\n      and <strong>\', escape=False)\n        response.write(disk[\'misses\'])\n        response.write(\'</strong> misses)\\n    </p>\\n    <p>\\n      Size of cache: \\n      \', escape=False)\n        if object_stats:\n            response.write(\'\\n      <strong>\', escape=False)\n            response.write(disk[\'objects\'])\n            response.write(\'</strong> items, \\n      <strong>\', escape=False)\n            response.write(disk[\'bytes\'])\n            response.write(\'</strong> bytes \\n      \', escape=False)\n            if disk[\'bytes\'] > 524287:\n                response.write(\'\\n      (<strong>\', escape=False)\n                response.write(disk[\'bytes\'] / 1048576)\n                response.write(\' MB</strong>)\\n      \', escape=False)\n                pass\n            response.write(\'\\n      \', escape=False)\n        else:\n            response.write(\' <strong>not available</strong> (requires the Python <a href="http://pypi.python.org/pypi/guppy/" target="_blank">guppy</a> library)\\n      \', escape=False)\n            pass\n        response.write(\'\\n    </p>\\n    <p>\\n      DISK contains items up to \\n      <strong>\', escape=False)\n        response.write("%02d" % disk[\'oldest\'][0])\n        response.write(\'</strong> hours \\n      <strong>\', escape=False)\n        response.write("%02d" % disk[\'oldest\'][1])\n        response.write(\'</strong> minutes \\n      <strong>\', escape=False)\n        response.write("%02d" % disk[\'oldest\'][2])\n        response.write(\'</strong> seconds old.\\n    </p>\\n    \', escape=False)\n        response.write(BUTTON(T(\'Disk Cache Keys\'), _onclick=\'jQuery("#disk_keys").toggle();\'))\n        response.write(\'\\n    <div class="hidden" id="disk_keys">\\n      \', escape=False)\n        response.write(disk[\'keys\'])\n        response.write(\'\\n    </div>\\n    <br />\\n    \', escape=False)\n        pass\n    response.write(\'\\n  </div>\\n    \\n  <div class="list-header">\\n    <h3>Manage Cache</h3>\\n  </div>\\n  \\n  <div class="content">\\n    <p>\\n      \', escape=False)\n    response.write(form)\n    response.write(\'\\n    </p>\\n  </div>\\n</div>\\n<div class="clear"></div>\\n\', escape=False)\n    pass\nresponse.write(\'\\n\', escape=False)\nresponse.write(\'\\n    </div>\\n    <!-- end main -->\\n    <!-- footer -->\\n    <div id="footer">\\n     <div id="left_footer">\\n      &copy; Copyright 2008 Your website\\n     </div>\\n     <div id="right_footer">\\n      <!-- Please do not change or delete this links. Read the license! Thanks. :-) -->\\n      <a href="http://www.realitysoftware.ca/website-design.html">\\n       Website design\\n      </a>\\n      by\\n      <a href="http://www.realitysoftware.ca">\\n       Reality Software\\n      </a>\\n     </div>\\n    </div>\\n    <!-- end footer -->\\n   </div>\\n  </div>\\n </body>\\n</html>\\n\', escape=False)'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/usr/lib/pymodules/python2.7/gluon/restricted.py", line 204, in restricted\n    exec ccode in environment\n  File "/home/unic/web2py/applications/manager/views/appadmin.html", line 174, in <module>\n    RAM contains items up to\n  File "/usr/lib/pymodules/python2.7/gluon/sqlhtml.py", line 2071, in __init__\n    columns = sqlrows.colnames\n  File "/usr/lib/pymodules/python2.7/gluon/dal.py", line 4440, in __getattr__\n    return self[key]\n  File "/usr/lib/pymodules/python2.7/gluon/dal.py", line 4431, in __getitem__\n    return dict.__getitem__(self, key)\nKeyError: \'colnames\'\n'
p11
s.